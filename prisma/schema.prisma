// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  firstName String
  lastName  String?
  email     String    @unique
  gender    String?
  phone     String?
  owner     Owner?
  birthdate DateTime?
  address   String?
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Owner {
  ownerId  String     @id
  about    String
  user     User       @relation(fields: [ownerId], references: [id])
  property Property[]
}

model Admin {
  id        String   @id @default(uuid())
  firstName String
  lastName  String?
  email     String   @unique
  gender    String
  phone     String?
  type      String
  birthdate DateTime
  address   String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Support {
  id        String   @id @default(uuid())
  firstName String
  lastName  String?
  email     String   @unique
  gender    String
  phone     String?
  type      String
  birthdate DateTime
  address   String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Property {
  id             String   @id @default(uuid())
  title          String //
  description    String? //
  price          String? //
  location       Json?
  // status         String? //
  // category       String? //
  IsAvailable    Boolean  @default(true)
  type           String? //
  images         String[]
  area           String? //szie
  // GrossM2          String? //
  // netM2            String? //
  num_rooms      String? //
  num_bath_rooms String? //  living room
  // warming_type     String? //
  // building_age     String? //
  floor_location String? //
  street_address String? //
  // rental_income    String? //
  furnished      Boolean? // 
  email          String? //
  phone          String? // 
  // balcony          Boolean? //
  city           String? //
  postal_code    String? //
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  ownerId        String
  owner          Owner    @relation(fields: [ownerId], references: [ownerId])
}

enum type {
  apartment
  house
  Duplex
  Studio
}
